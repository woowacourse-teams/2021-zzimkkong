package com.woowacourse.zzimkkong.infrastructure.thumbnail;

import com.woowacourse.zzimkkong.exception.infrastructure.SvgToPngConvertException;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;

import java.io.*;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatThrownBy;
import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;

@SpringBootTest
@ActiveProfiles("test")
class BatikConverterTest {
    private static final String LUTHER_SVG = "<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"950\" height=\"610\"><polyline points=\"40,560 300,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"300,440 130,440\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"110,440 130,440\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"110,460 110,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"110,350 110,440\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"110,330 300,330\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"300,270 300,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"220,270 220,330\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"140,270 140,330\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"240,270 300,270\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"160,270 220,270\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"110,280 110,310\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"110,310 120,310\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"120,310 120,280\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"120,280 110,280\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"110,500 40,500\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"50,560 50,200\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"40,200 100,200\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"120,200 120,130\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"120,130 40,130\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"90,200 90,240\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"90,240 50,240\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"140,200 300,200\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"120,60 120,140\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"300,330 400,330\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"500,330 600,330\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"450,350 430,370\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"430,370 440,370\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"440,370 440,410\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"440,410 460,410\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"460,410 460,370\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"460,370 470,370\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"470,370 450,350\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"450,260 460,260\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"460,260 460,70\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"460,70 450,70\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"450,70 450,260\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"500,260 600,260\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"500,190 520,170\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"520,170 520,120\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"520,120 540,100\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"540,100 560,100\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"560,100 580,120\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"580,120 580,260\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"600,260 630,260\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"600,220 630,220\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"600,180 630,180\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"600,140 630,140\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"600,100 630,100\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"630,140 630,160\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"630,180 630,200\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"630,220 630,240\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"600,330 600,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"630,260 630,290\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"630,290 500,290\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"500,290 500,260\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"300,270 330,270\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"330,270 330,330\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"680,230 680,290\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"680,230 680,180\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"300,60 300,200\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"40,60 910,60\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"910,60 910,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"910,560 600,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"680,230 910,230\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"820,230 820,290\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"730,230 730,290\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"680,290 800,290\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"840,290 910,290\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"680,60 680,100\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"40,60 40,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"500,190 500,60\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"370,330 370,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"300,560 370,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"530,330 530,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"530,560 600,560\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"600,60 600,260\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><polyline points=\"630,80 630,120\" stroke=\"#333333\" stroke-width=\"3\" stroke-linecap=\"round\"></polyline><g data-testid=\"42\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"110\" y=\"440\" width=\"190\" height=\"120\" fill=\"#0060FF\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"205\" y=\"500\" class=\"sc-carFqZ hTwlVf\">프론트 강의실1</text></g><g data-testid=\"43\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"110\" y=\"330\" width=\"190\" height=\"110\" fill=\"#0060FF\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"205\" y=\"385\" class=\"sc-carFqZ hTwlVf\">프론트 강의실 2</text></g><g data-testid=\"46\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"220\" y=\"270\" width=\"80\" height=\"60\" fill=\"#EB3933\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"260\" y=\"300\" class=\"sc-carFqZ hTwlVf\">회의실 3</text></g><g data-testid=\"47\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"140\" y=\"270\" width=\"80\" height=\"60\" fill=\"#EB3933\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"180\" y=\"300\" class=\"sc-carFqZ hTwlVf\">회의실 4</text></g><g data-testid=\"48\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"40\" y=\"130\" width=\"80\" height=\"70\" fill=\"#EB3933\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"80\" y=\"165\" class=\"sc-carFqZ hTwlVf\">회의실 5</text></g><g data-testid=\"50\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"600\" y=\"220\" width=\"30\" height=\"40\" fill=\"#8B5CF6\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"615\" y=\"240\" class=\"sc-carFqZ hTwlVf\">1</text></g><g data-testid=\"51\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"600\" y=\"180\" width=\"30\" height=\"40\" fill=\"#8B5CF6\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"615\" y=\"200\" class=\"sc-carFqZ hTwlVf\">2</text></g><g data-testid=\"52\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"600\" y=\"140\" width=\"30\" height=\"40\" fill=\"#8B5CF6\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"615\" y=\"160\" class=\"sc-carFqZ hTwlVf\">3</text></g><g data-testid=\"53\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"600\" y=\"100\" width=\"30\" height=\"40\" fill=\"#8B5CF6\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"615\" y=\"120\" class=\"sc-carFqZ hTwlVf\">4</text></g><g data-testid=\"55\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"40\" y=\"500\" width=\"70\" height=\"60\" fill=\"#FFEE58\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"75\" y=\"530\" class=\"sc-carFqZ hTwlVf\">방송실</text></g><g data-testid=\"56\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"50\" y=\"200\" width=\"40\" height=\"40\" fill=\"#FFEE58\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"70\" y=\"220\" class=\"sc-carFqZ hTwlVf\">전화</text></g><g data-testid=\"67\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"600\" y=\"330\" width=\"310\" height=\"230\" fill=\"#6BC2F9\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"755\" y=\"445\" class=\"sc-carFqZ hTwlVf\">백엔드 강의실</text></g><g data-testid=\"68\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"820\" y=\"230\" width=\"90\" height=\"60\" fill=\"#EB3933\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"865\" y=\"260\" class=\"sc-carFqZ hTwlVf\">회의실 1</text></g><g data-testid=\"69\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"730\" y=\"230\" width=\"90\" height=\"60\" fill=\"#EB3933\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"775\" y=\"260\" class=\"sc-carFqZ hTwlVf\">회의실 2</text></g><g data-testid=\"70\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"600\" y=\"60\" width=\"30\" height=\"40\" fill=\"#8B5CF6\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"615\" y=\"80\" class=\"sc-carFqZ hTwlVf\">5</text></g><g data-testid=\"71\" class=\"sc-ciSkZP bwSYJA\"><rect x=\"500\" y=\"60\" width=\"100\" height=\"200\" fill=\"#5CAC1E\" opacity=\"0.3\" class=\"sc-jcwpoC kyvWZW\"></rect><text x=\"550\" y=\"160\" class=\"sc-carFqZ hTwlVf\">트랙방</text></g></svg>";

    @Autowired
    private BatikConverter batikConverter;

    private File testFile;

    @Test
    @DisplayName("svg 데이터를 png 파일로 변환한다.")
    void convert() {
        // given
        String rawSvgData = "<?xml version=\"1.0\"?><svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 30 30\" width=\"30px\" height=\"30px\">    <path d=\"M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z\"/></svg>";

        // when
        this.testFile = batikConverter.convertSvgToPngFile(rawSvgData, "testPngFileName");

        // then
        assertThat(testFile).isEqualTo(new File(batikConverter.getSaveDirectoryPath() + "testPngFileName.png"));
    }

    @Test
    @DisplayName("svg 데이터를 png 데이터로 변환한다.")
    void convertAndWriteToOutputStream() {
        // given
        try (ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(LUTHER_SVG.getBytes());
             ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {
            BufferedInputStream bufferedInputStream = new BufferedInputStream(byteArrayInputStream);
            BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(byteArrayOutputStream);

            // when, then
            assertDoesNotThrow(() -> batikConverter.convertSvgToPng(bufferedInputStream, bufferedOutputStream));
        } catch (IOException ignore) {
        }
    }

    @Test
    @DisplayName("옳지 않은 svg 데이터가 들어오면 오류가 발생한다.")
    void convertException() {
        // given
        String rawSvgData = "strangeSvgData";

        // when, then
        try (final BufferedInputStream bufferedInputStream = new BufferedInputStream(new ByteArrayInputStream(rawSvgData.getBytes()));
             final BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(new ByteArrayOutputStream())) {

            assertThatThrownBy(() -> batikConverter.convertSvgToPng(bufferedInputStream, bufferedOutputStream))
                    .isInstanceOf(SvgToPngConvertException.class);
        } catch (IOException exception) {
            exception.printStackTrace();
        }
    }

    @AfterEach
    void deleteFile() {
        if (testFile != null) {
            testFile.delete();
            testFile = null;
        }
    }
}
