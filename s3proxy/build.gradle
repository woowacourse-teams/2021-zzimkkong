plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.convert" version "1.5.10"
    id 'java'
}

group = 'com.woowacourse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Multi-Part
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'commons-fileupload:commons-fileupload:1.4'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Rest Docs
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    // Logstash
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'

    // Kafka Appender
    implementation 'com.github.danielwegener:logback-kafka-appender:0.2.0-RC2'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

task createDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/asciidoc/html5/index.html")
    into file("src/main/resources/static/docs")
}

bootJar {
    dependsOn createDocument
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}


